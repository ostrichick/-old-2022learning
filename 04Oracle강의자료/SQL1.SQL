DESC departments;
/*예제 1 EMPLOYEES 테이블에 있는 모든 데이터를 조회*/
SELECT * FROM EMPLOYEES ;
SELECT * FROM HR.EMPLOYEES ;
/*예제 2 EMPLOYEES 테이블에 있는 직원 이름, 전화번호, 급여를 조회*/
SELECT FIRST_NAME,PHONE_NUMBER,SALARY FROM EMPLOYEES;
SELECT FIRST_NAME AS 이름,PHONE_NUMBER AS "전화 번호" ,SALARY AS 급여 FROM EMPLOYEES; -- '전화 번호'는 작동 안함
/*예제 3 시퀀스*/
CREATE SEQUENCE HR INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 9999 NOCYCLE NOCACHE NOORDER;
DELETE SEQUENCE HR;
CREATE SEQUENCE SEC02 -- 그냥 쓰면 이름만. 아니면 스키마.시퀀스명
INCREMENT BY 1 START WITH 1
--MINVALUE 1 -- NOCYCLE과 동시에 사용할 필요 없음
MAXVALUE 9999999
NOCYCLE NOCACHE NOORDER;

/* 급여가 5000이상이고 10000이하인 직원의 사원번호, 이름, 급여 조회*/
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY FROM EMPLOYEES
-- WHERE SALARY BETWEEN 5000 AND 10000;
 WHERE SALARY >=5000 AND SALARY <= 10000;
 -- 5000 <= SALARY >= 10000 같은 형태는 지원하지 않음

 /*예제 4 EMPLOYEES 테이블에서 부서번호가 10, 20, 100에 속하는 직원의 부서번호, 이름 조회*/
 SELECT DEPARTMENT_ID, FIRST_NAME FROM EMPLOYEES
 WHERE DEPARTMENT_ID IN (10, 20, 100);
 -- WHERE DEPARTMENT_ID = ANY (10, 20, 100); -- 같은 의미

  /*예제 5 EMPLOYEES 테이블에서 이름이 A로 시작하는 직원의 사번 이름 조회*/
  SELECT EMPLOYEE_ID, FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE 'A%';

   /*예제 6 EMPLOYEES에서 사번, 이름, 급여를 급여가 높은 순 조회*/
   SELECT EMPLOYEE_ID, FIRST_NAME, SALARY FROM EMPLOYEES
   ORDER BY SALARY DESC;
   -- ASC 오름차순(기본값,작은거부터), DESC 내림차순(큰거부터)

/*예제 7 EMPLOYEES에서 급여가 높은 상위 5명의 사번, 이름, 급여 조회*/
SELECT * FROM (SELECT EMPLOYEE_ID, FIRST_NAME, SALARY FROM EMPLOYEES
   ORDER BY SALARY DESC) WHERE ROWNUM <= 5;

/*예제 8 결합연산자 || - EMPLOYEES에서 직원이름의 급여는 얼마입니다는 컬럼명은 직원급여로 조회*/
SELECT FIRST_NAME || '의 급여는' || SALARY || '입니다' AS "직원 급여" FROM EMPLOYEES;

/*예제 9 DISTINCT - EMPLOYEES에서 중복된 값 없이 급여 목록을 조회*/
   SELECT DISTINCT SALARY "직 원 급 여" FROM EMPLOYEES ORDER BY SALARY DESC;

   /*예제 10 테이블복사 CTAS : EMPLOYEES 테이블을 EMPLOYEES_COPE 로 복사*/
   CREATE TABLE EMPLOYEES_COPY AS(SELECT * FROM EMPLOYEES);
   DROP TABLE EMPLOYEES_COPY;

   /*예제 11 집계함수 sum() avg() max() min()
   employees 테이블에서 부서번호가 100인 직원들의 급여 합계과 평균 급여, 가장 높은 급여를 조회*/
   SELECT SUM(SALARY), CAST(AVG(SALARY) AS NUMBER (7,2)), MAX(SALARY), MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING DEPARTMENT_ID = 100;

